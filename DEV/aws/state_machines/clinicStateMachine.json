{
  "Comment": "Escolhe entre obter um faceprint ou fazer reconhecimento facial",
  "StartAt": "Escolher Funcionalidade",
  "States": {
    "Escolher Funcionalidade": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.type",
              "IsPresent": true
            },
            {
              "Variable": "$.type",
              "StringEquals": "facialRecognition"
            }
          ],
          "Next": "Validação 1"
        },
        {
          "And": [
            {
              "Variable": "$.type",
              "IsPresent": true
            },
            {
              "Variable": "$.type",
              "StringEquals": "getFaceprint"
            }
          ],
          "Next": "Validação 2"
        }
      ],
      "Default": "Formato inválido"
    },
    "Formato inválido": {
      "Type": "Fail",
      "Cause": "Input payload is in an invalid format."
    },
    "Validação 2": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.arguments.username",
              "IsPresent": true
            },
            {
              "Variable": "$.arguments.username",
              "IsString": true
            },
            {
              "Variable": "$.arguments.bucketName",
              "IsPresent": true
            },
            {
              "Variable": "$.arguments.bucketName",
              "IsString": true
            },
            {
              "Variable": "$.arguments.collectionId",
              "IsPresent": true
            },
            {
              "Variable": "$.arguments.collectionId",
              "IsString": true
            }
          ],
          "Next": "Obter Impressão Facial"
        }
      ],
      "Default": "Formato inválido"
    },
    "Obter Impressão Facial": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:730400266253:function:getFacialPrint:$LATEST",
        "Payload": {
          "username.$": "$.arguments.username",
          "bucketName.$": "$.arguments.bucketName",
          "collectionId.$": "$.arguments.collectionId"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "Verificação de erros 2"
    },
    "Verificação de erros 2": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.faceId",
              "IsPresent": true
            },
            {
              "Variable": "$.username",
              "IsPresent": true
            }
          ],
          "Next": "Guardar Impressão Facial"
        }
      ],
      "Default": "Formato inválido"
    },
    "Guardar Impressão Facial": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "clinic.faces",
        "Item": {
          "faceId.$": "$.faceId",
          "username.$": "$.username"
        }
      },
      "Next": "Success"
    },
    "Validação 1": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.arguments.imageUUID",
              "IsPresent": true
            },
            {
              "Variable": "$.arguments.imageUUID",
              "IsString": true
            },
            {
              "Variable": "$.arguments.bucketName",
              "IsPresent": true
            },
            {
              "Variable": "$.arguments.bucketName",
              "IsString": true
            },
            {
              "Variable": "$.arguments.collectionId",
              "IsPresent": true
            },
            {
              "Variable": "$.arguments.collectionId",
              "IsString": true
            }
          ],
          "Next": "Fazer Reconhecimento Facial"
        }
      ],
      "Default": "Formato inválido"
    },
    "Fazer Reconhecimento Facial": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:730400266253:function:clientFacialRecognition:$LATEST",
        "Payload": {
          "imageUUID.$": "$.arguments.imageUUID",
          "bucketName.$": "$.arguments.bucketName",
          "collectionId.$": "$.arguments.collectionId"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "DeleteObject"
    },
    "DeleteObject": {
      "Type": "Task",
      "Parameters": {
        "Bucket.$": "$.bucketName",
        "Key.$": "$.imageUUID"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:deleteObject",
      "Next": "Verificação de erros 1",
      "ResultPath": null
    },
    "Verificação de erros 1": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.faceId",
          "IsPresent": true,
          "Next": "Verificar Impressão Facial"
        }
      ],
      "Default": "Formato inválido"
    },
    "Verificar Impressão Facial": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "clinic.faces",
        "Key": {
          "faceId.$": "$.faceId"
        }
      },
      "Next": "Verificação de correspondência"
    },
    "Verificação de correspondência": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Item",
          "IsPresent": true,
          "Next": "Success"
        }
      ],
      "Default": "Não existe correspondência"
    },
    "Não existe correspondência": {
      "Type": "Fail",
      "Cause": "No match for face print."
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}